<VirtualHost *:80>
		AddType application/x-httpd-php .php .php5 .php4
		Action application/x-httpd-php /php-fcgi
		Action php-fcgi /php-fcgi
		
		FastCgiExternalServer /usr/lib/cgi-bin/php-fcgi -socket /var/run/php/php-fpm.sock -idle-timeout 600 -pass-header Authorization
		Alias /php-fcgi /usr/lib/cgi-bin/php-fcgi
		SetEnv PHP_VALUE "max_execution_time = 300"
		SetEnv PHP_VALUE "include_path = /var/www/include_local:/var/www/  include"

		<Directory /usr/lib/cgi-bin>
         Require all granted
         </Directory>
		ServerAdmin example.admin@domain.lan

		DocumentRoot /var/www/html

		# Available loglevels: trace8, ..., trace1, debug, info, notice, warn,
		# error, crit, alert, emerg.
		# It is also possible to configure the loglevel for particular
		# modules, e.g.
		#LogLevel info ssl:warn

		
		LogFormat "%h %l %u %t \"%r\" %>s %b \"%{Referer}i\" \"%{User-Agent}i\"" combined
                LogFormat "%{X-Forwarded-For}i %l %u %t \"%r\" %>s %b \"%{Referer}i\" \"%{User-Agent}i\"" proxy          
                SetEnvIf X-Forwarded-For "^.*\..*\..*\..*" forwarded
                ErrorLog ${APACHE_LOG_DIR}/error.log
                CustomLog ${APACHE_LOG_DIR}/access.log combined env=!forwarded 
                CustomLog ${APACHE_LOG_DIR}/access.log proxy env=forwarded


		# For most configuration files from conf-available/, which are
		# enabled or disabled at a global level, it is possible to
		# include a line for only one particular virtual host. For example the
		# following line enables the CGI configuration for this host only
		# after it has been globally disabled with "a2disconf".
		#Include conf-available/serve-cgi-bin.conf

		<FilesMatch "\.(cgi|shtml|phtml|php)$">
				SSLOptions +StdEnvVars
		</FilesMatch>
		<Directory /usr/lib/cgi-bin>
				SSLOptions +StdEnvVars
		</Directory>

		#   SSL Protocol Adjustments:
		#   The safe and default but still SSL/TLS standard compliant shutdown
		#   approach is that mod_ssl sends the close notify alert but doesn't wait for
		#   the close notify alert from client. When you need a different shutdown
		#   approach you can use one of the following variables:
		#   o ssl-unclean-shutdown:
		#	 This forces an unclean shutdown when the connection is closed, i.e. no
		#	 SSL close notify alert is send or allowed to received.  This violates
		#	 the SSL/TLS standard but is needed for some brain-dead browsers. Use
		#	 this when you receive I/O errors because of the standard approach where
		#	 mod_ssl sends the close notify alert.
		#   o ssl-accurate-shutdown:
		#	 This forces an accurate shutdown when the connection is closed, i.e. a
		#	 SSL close notify alert is send and mod_ssl waits for the close notify
		#	 alert of the client. This is 100% SSL/TLS standard compliant, but in
		#	 practice often causes hanging connections with brain-dead browsers. Use
		#	 this only for browsers where you know that their SSL implementation
		#	 works correctly.
		#   Notice: Most problems of broken clients are also related to the HTTP
		#   keep-alive facility, so you usually additionally want to disable
		#   keep-alive for those clients, too. Use variable "nokeepalive" for this.
		#   Similarly, one has to force some clients to use HTTP/1.0 to workaround
		#   their broken HTTP/1.1 implementation. Use variables "downgrade-1.0" and
		#   "force-response-1.0" for this.
		# BrowserMatch "MSIE [2-6]" \
		#		nokeepalive ssl-unclean-shutdown \
		#		downgrade-1.0 force-response-1.0

	<Directory "/var/www">
	 Header set Content-Security-Policy "default-src 'https:';"
	 Header set Referrer-Policy "strict-origin-when-cross-origin"
	 Header always set X-Content-Type-Options "nosniff"
	 Header always set X-Frame-Options "SAMEORIGIN"
	 
     Options -Indexes +IncludesNOEXEC +SymLinksIfOwnerMatch
     AllowOverride All
     AddType application/x-httpd-php .htm .html .php5 #.php4
     AddHandler application/x-httpd-php .html .htm .php5 #.php4
</Directory>
      ############php_admin_value error_log ${APACHE_LOG_DIR}/php.error.log
      ############php_value include_path /var/www/include_local:/var/www/include
     </VirtualHost>

# vim: syntax=apache ts=4 sw=4 sts=4 sr noet
