stages: 
  - buildx
  - build

prepare-buildx: 
  artifacts: 
    expire_in: "1 hour"
    paths: 
      - buildx
  image: "docker:latest"
  script: 
    - apk add  git bash
    - echo "::PREP:BUILDX"
    - "/bin/bash _build.hocker.sh buildx"
  services: 
    - "docker:19.03-dind"
  stage: buildx
  variables: 
    GIT_STRATEGY: none


before_script: 
  - uptime
  - "docker login -u ${REGISTRY_USER} -p ${REGISTRY_PASSWORD} ${REGISTRY_HOST} || true"

hocker-builder-latest: 
  artifacts: 
    paths: 
      - buildlogs
    when: always
  before_script: ~
  image: "docker:stable"
  only: 
    - master
  script: 
    - uptime
    - "apk add git bash"
    - "/bin/bash _build.hocker.sh latest"
  services: 
    - 
      command: 
        - "--experimental"
      name: "docker:19.03-dind"
  stage: build
  variables: 
    GIT_SUBMODULE_STRATEGY: recursive
hocker-builder-p5: 
  artifacts: 
    paths: 
      - buildlogs
    when: always
  before_script: ~
  image: "docker:stable"
  only: 
    - master
  script: 
    - uptime
    - "apk add git bash"
    - "/bin/bash _build.hocker.sh php5"
  services: 
    - 
      command: 
        - "--experimental"
      name: "docker:19.03-dind"
  stage: build
  variables: 
    GIT_SUBMODULE_STRATEGY: recursive
hocker-builder-p7: 
  artifacts: 
    paths: 
      - buildlogs
    when: always
  before_script: ~
  image: "docker:stable"
  only: 
    - master
  script: 
    - uptime
    - "apk add git bash"
    - "/bin/bash _build.hocker.sh php7"
  services: 
    - 
      command: 
        - "--experimental"
      name: "docker:19.03-dind"
  stage: build
  variables: 
    GIT_SUBMODULE_STRATEGY: recursive

hocker-builder-aux: 
  artifacts: 
    paths: 
      - buildlogs
    when: always
  before_script: ~
  image: "docker:stable"
  only: 
    - master
  script: 
    - uptime
    - "apk add git bash"
    - "/bin/bash _build.hocker.sh aux"
  services: 
    - 
      command: 
        - "--experimental"
      name: "docker:19.03-dind"
  stage: build
  variables: 
    GIT_SUBMODULE_STRATEGY: recursive
